//Create profiles to easily switch between the different process executors and platforms.

//global parameters
params {
    // general options
    sample_sheet                = "/active/taylor_s/people/ybae/CP-Acomys_kidneys/nguyen_e_2023.08_tfcomb/sample/test_1_peak_annotated_sample_sheet.csv"
    queue                       = "paidq" 
    project                     = "207f23bf-acb6-4835-8bfe-142436acb58c" 
    outdir                      = "./results" 
    publish_dir_mode            = 'copy'

    // if you use motif as input, need genome DB information to build one for homer
    
    // Organism (-org): Put null here if you are using an unsupported organism. http://homer.ucsd.edu/homer/introduction/update.html 
    genome                      = "GRCH38" // acahirinus
    organism                    = "null" // human, mouse
    config                      = "homer_configs/homer_config.txt"

    // Genome Refs, need fasta and gtf to build customer database for homer
    fasta                       =  "/gpfs/shared_data/references/Acahirinus/acahirinus.fa" // "/gpfs/shared_data/references/Homo_sapiens/NCBI/hg38/Sequence/WholeGenomeFasta/GRCh38_latest_genomic.fna"
    gtf                         =  "/gpfs/shared_data/references/Acahirinus/acahirinus.gtf" // "/gpfs/shared_data/references/Homo_sapiens/NCBI/hg38/Annotation/GCA_000001405.15_GRCh38_full_analysis_set.refseq_annotation.gtf"
    
    // parameter for homer findmotifgenome.pl
    size                        = 500 // 500 for histone markers, 50 for TFs is recommanded 

    // parameters_for_tf_comb
    max_dist = 50000
}


profiles {
    //For running on an interactive session on cybertron with singularity module loaded
    local_singularity {
        process.executor = 'local'
        singularity.enabled = true
    }
    //For executing the jobs on the HPC cluster with singularity containers
    PBS_singularity {
        process.executor = 'pbspro'
        process.queue = "${params.queue}"
        process.clusterOptions = "-P ${params.project}"
        process.beforeScript = 'module load singularity'
        singularity.enabled = true
    }
    /*
    //For executing the jobs on the HPC cluster with apptainer containers
    PBS_apptainer {
        process.executor = 'pbspro'
        process.queue = "${params.queue}"
        process.clusterOptions = "-P ${params.project}"
        process.beforeScript = 'module load apptainer'
        apptainer.enabled = true
    }
    //For running on cybertron with apptainer module loaded
    local_apptainer {
        process.executor = 'local'
        apptainer.enabled = true
    }
        //For executing the jobs on the HPC cluster with conda environments.
    PBS_conda {
        process.executor = 'pbspro'
        process.queue = "${params.queue}"
        process.clusterOptions = "-P ${params.project}"
        conda.enabled = true
    }
    //For running interactively on local macbook with docker installed.
    local_docker {
        process.executor = 'local'
        docker.enabled = true
    }
    */
}
